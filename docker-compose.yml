services:
  redis:
    image: redis:7-alpine
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data
    networks:
      - trading-network

  receiver:
    build:
      context: .
      dockerfile: trading/receiver/Dockerfile  # Fixed path
    container_name: trading-app-receiver
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - trading-network
    environment:
      - DB_BASE_PATH=/app/data
    volumes:
      - ./config:/app/config:ro
      - trading-data:/app/data
    # Add resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

  # Add processor service
  processor:
    build:
      context: .
      dockerfile: trading/processor/Dockerfile
    container_name: trading-app-processor
    depends_on:
      - redis
    networks:
      - trading-network
    environment:
      - DB_BASE_PATH=/app/data
    volumes:
      - trading-data:/app/data

volumes:
  redis-data:
  trading-data:

networks:
  trading-network:
    driver: bridge