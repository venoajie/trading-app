services:
  redis:
    image: redis:7-alpine
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data
    networks:
      - trading-network
    env_file:
      - .env 

  receiver:
    build:
      context: .
      dockerfile: src/receiver/deribit/Dockerfile
    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data
    environment:
      CONFIG_DIR: /app/config
      DB_BASE_PATH: /app/data
      DERIBIT_CLIENT_ID: ${DERIBIT_CLIENT_ID}
      DERIBIT_CLIENT_SECRET: ${DERIBIT_CLIENT_SECRET}
      STATUS_API_KEY: ${STATUS_API_KEY}
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "127.0.0.1:8000:8000" 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - trading-network

volumes:
  redis-data:
  trading-data:

networks:
  trading-network:
    driver: bridge
